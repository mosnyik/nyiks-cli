import { Command } from "commander";
import chalk from "chalk";
import fs from "fs-extra";
import path from "path";

export function initCommand() {
  const command = new Command("init");

  command
    .argument("<projectName>", "Name of the new project")
    .description("Initialize a new Nyiks project")
    .action(async (projectName) => {
      const projectPath = path.join(process.cwd(), projectName);

      // Check if project directory already exists
      if (await fs.pathExists(projectPath)) {
        console.log(
          chalk.red(
            `‚ùå Project "${projectName}" already exists at ${projectPath}.`
          )
        );
        process.exit(1);
      }

      // Create project directory and contracts subdirectory
      await fs.mkdirp(path.join(projectPath, "contracts"));

      console.log(chalk.green(`üìÅ Created project directory: ${projectPath}`));
      console.log(chalk.blue(`üìÇ Created contracts directory inside.`));

      // Optional: Create a basic README
      const readmePath = path.join(projectPath, "README.md");
      await fs.writeFile(
        readmePath,
        `# ${projectName}
      
      This project was initialized using the **Nyiks CLI**.
      
      ## Getting Started
      
      After generating the project with:
      
      \`\`\`bash
      nyiks init ${projectName}
      \`\`\`
      
      Navigate into your project directory:
      
      \`\`\`bash
      cd ${projectName}
      \`\`\`
      
      Then generate your first smart contract:
      
      \`\`\`bash
      nyiks generate --name "Fungible Token" --type "ft" --max-supply 1000000 --symbol "FT"
      \`\`\`
      
      ---
      
      Smart contracts generated by **Nyiks CLI**.`
      );

      //       await fs.writeFile(
      //         readmePath,
      //         `# ${projectName}\n\n After nyiks init ${projectName}\n\n
      // cd ${projectName}\n\n
      // nyiks generate --name "Fungible Token" --type "ft" --max-supply 1000000 --symbol "FT"
      // \n\nSmart contracts generated by Nyiks CLI.`
      //       );

      console.log(chalk.yellow("üìñ Added README.md"));
    });

  return command;
}
